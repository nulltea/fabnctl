apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}-peer
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      initContainers:
      - name: artifacts-generate
        image: "hyperledger/fabric-tools:{{.Values.peer.image.tag }}"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
          - rm -rf /artifacts/*;
            cp /config/* /artifacts;
            cd /artifacts;
            cryptogen generate --config=./crypto-config.yaml;
            configtxgen -configPath . -profile {{ .Values.config.ordererProfile }} -channelID system-channel
            -outputBlock channel-artifacts/genesis.block;
            configtxgen -configPath . -profile {{ .Values.config.channelProfile }} -channelID {{ .Values.config.channelID }}
            -outputCreateChannelTx ./channel-artifacts/channel.tx
            configtxgen -configPath . -profile {{ .Values.config.channelProfile }} -channelID {{ .Values.config.channelID }} -asOrg {{ .Values.config.mspID }}
            -outputAnchorPeersUpdate ./channel-artifacts/supplierAnchors.tx
            echo done!
        volumeMounts:
          - name: artifacts
            mountPath: /artifacts
          - name: config
            mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.peer.image.repository }}:{{ .Values.peer.image.tag }}"
          imagePullPolicy: {{ .Values.peer.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.peer.service.port }}
            - containerPort: {{ .Values.peer.service.chaincodePort }}
          args:
            - peer
            - node
            - start
          env:
            - name: FABRIC_LOGGING_SPEC
              value: {{ .Values.logging }}
            - name: CORE_PEER_ID
              value: "{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}"
            - name: CORE_PEER_LOCALMSPID
              value: {{ .Values.config.mspID }}
            - name: CORE_PEER_ADDRESS
              value: "{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}:{{ .Values.peer.service.port }}"
            - name: CORE_PEER_LISTENADDRESS
              value: "0.0.0.0:{{ .Values.peer.service.port }}"
            - name: CORE_PEER_CHAINCODEADDRESS
              value: "{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}:{{ .Values.peer.service.chaincodePort }}"
            - name: CORE_PEER_CHAINCODELISTENADDRESS
              value: "0.0.0.0:{{ .Values.peer.service.chaincodePort }}"
            - name: CORE_PEER_GOSSIP_USELEADERELECTION
              value: "true"
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: "{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}:{{ .Values.peer.service.port }}"
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: "{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}:{{ .Values.peer.service.port }}"
            - name: CORE_PEER_PROFILE_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_CERT_FILE
              value: /etc/hyperledger/fabric/tls/server.crt
            - name: CORE_PEER_TLS_ENABLED
              value: "true"
            - name: CORE_PEER_TLS_KEY_FILE
              value: /etc/hyperledger/fabric/tls/server.key
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: /etc/hyperledger/fabric/tls/ca.crt
            - name: CORE_VM_ENDPOINT
              value: http://localhost:2375
          volumeMounts:
            - name: storage
              mountPath: /var/hyperledger/production
            - name: core
              mountPath: /etc/hyperledger/fabric/core.yaml
              subPath: core.yaml
            - name: artifacts
              mountPath: /etc/hyperledger/fabric/msp
              subPath: crypto-config/peerOrganizations/{{ .Values.config.domain }}/peers/{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}/msp
            - name: artifacts
              mountPath: /etc/hyperledger/fabric/tls
              subPath: crypto-config/peerOrganizations/{{ .Values.config.domain }}/peers/{{ .Values.config.peerSubdomain }}.{{ .Values.config.domain }}/tls
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
      restartPolicy: Always
      volumes:
        - name: storage
          emptyDir: {} # TODO make persistent
        - name: artifacts
          persistentVolumeClaim:
            claimName: {{ template "chart.fullname" . }}.artifacts.pvc
        - name: config
          configMap:
            name: {{ template "chart.fullname" . }}.artifacts.config
        - name: core
          configMap:
            name: {{ template "chart.fullname" . }}.core.config
            items:
              - key: core.yaml
                path: core.yaml
